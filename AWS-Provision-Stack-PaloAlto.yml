###################################################################################
#     _              _ _     _        ____  _             _                 _     #
#    / \   _ __  ___(_) |__ | | ___  |  _ \| | __ _ _   _| |__   ___   ___ | | __ #
#   / _ \ | '_ \/ __| | '_ \| |/ _ \ | |_) | |/ _` | | | | '_ \ / _ \ / _ \| |/ / #
#  / ___ \| | | \__ \ | |_) | |  __/ |  __/| | (_| | |_| | |_) | (_) | (_) |   <  #
# /_/   \_\_| |_|___/_|_.__/|_|\___| |_|   |_|\__,_|\__, |_.__/ \___/ \___/|_|\_\ #
#                                                   |___/                         #
###################################################################################

# FILENAME
# provision_pan_f5_aws.yml
#
# DESCRIPTION
# Example playbook that will instantiate Palo Alto VM-Series firewall and F5 Networks BigIP in AWS account and configure it basic
#
# REQUIREMENTS
# pip install boto3
# pip install botocore
# pip install ansible
# ansible-galaxy install PaloAltoNetworks.paloaltonetworks
#
# STEPS
# update vars.yml with your own credentials/settings
#
# Good practice: The var files are provided in cleartext. They should be edited and encrypred using:
# ansible-vault encrypt firewall-secrets.yml
#
# EXECUTE
# ansible-playbook provision_pan_f5_aws.yml
---
- hosts: localhost
  connection: local
  gather_facts: False

  roles:
    - role: PaloAltoNetworks.paloaltonetworks

###################################################################################
#                               _____         _                                   #
#                              |_   _|_ _ ___| | _____                            #
#                                | |/ _` / __| |/ / __|                           #
#                                | | (_| \__ \   <\__ \                           #
#                                |_|\__,_|___/_|\_\___/                           #
#                                                                                 #
###################################################################################

  tasks:
    - name: include variables (free-form)
      include_vars: vars.yml
      no_log: 'yes'

    # Get AWS variables information
    - name: get vpc subnet id Untrust Subnet
      ec2_vpc_subnet_facts:
       region: "{{ region }}"
       filters:
        "tag:Name": Untrust Subnet 10.0.10.0/24
      register: vpcsubnetdata1

    - debug:
       var=vpcsubnetdata1.subnets[0].id

    - name: get vpc subnet id Trust Subnet
      ec2_vpc_subnet_facts:
       region: "{{ region }}"
       filters:
        "tag:Name": Trust Subnet 10.0.1.0/24
      register: vpcsubnetdata2

    - debug:
       var=vpcsubnetdata2.subnets[0].id

    - name: get vpc subnet id DMZ Subnet
      ec2_vpc_subnet_facts:
       region: "{{ region }}"
       filters:
        "tag:Name": DMZ Subnet 10.0.2.0/24
      register: vpcsubnetdata3

    - debug:
       var=vpcsubnetdata3.subnets[0].id

    - name: get vpc subnet id Management Subnet
      ec2_vpc_subnet_facts:
       region: "{{ region }}"
       filters:
        "tag:Name": Management Subnet 10.0.0.0/24
      register: vpcsubnetdata4

    - debug:
       var=vpcsubnetdata4.subnets[0].id


    - name: get vpc id
      ec2_vpc_net_facts:
       region: "{{ region }}"
       filters:
        "tag:Name": StackBaseVPC
      register: vpcdata

    - debug:
       var=vpcdata.vpcs[0].id

    - name: Provision AWS-Create-Stack-PaloAlto.json
      cloudformation:
        stack_name: "StackPaloAlto"
        state: present
        region: "{{ region }}"
        disable_rollback: true
        template: AWS-Create-Stack-PaloAlto.json
      args:
        template_parameters:
          SSHKey: "{{ key_name }}"
          VPCidDATA: "{{ vpcdata.vpcs[0].id }}"
          SUBNETidDATA1: "{{ vpcsubnetdata1.subnets[0].id }}"
          SUBNETidDATA2: "{{ vpcsubnetdata2.subnets[0].id }}"
          SUBNETidDATA3: "{{ vpcsubnetdata3.subnets[0].id }}"
          SUBNETidDATA4: "{{ vpcsubnetdata4.subnets[0].id }}"
        tags:
          Stack: StackPaloAlto
      register: cloudformation

    # Show management IP
    - name: display FirewallManagementEIP
      debug:
         msg: "{{ cloudformation.stack_outputs.FirewallManagementEIP }}"

    # Wait for SSH connection
    - name: wait for SSH prompt (timeout 10min)
      wait_for: port=22 host="{{ cloudformation.stack_outputs.FirewallManagementEIP }}" timeout=600

    # Set Admin password
    - name: set admin password
      panos_admpwd: ip_address="{{ cloudformation.stack_outputs.FirewallManagementEIP }}" key_filename="{{key_filename}}" newpassword="{{admin_password}}"
      register: result
      until: not result | failed
      retries: 10
      delay: 30
