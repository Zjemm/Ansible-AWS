###################################################################################
#     _              _ _     _        ____  _             _                 _     #
#    / \   _ __  ___(_) |__ | | ___  |  _ \| | __ _ _   _| |__   ___   ___ | | __ #
#   / _ \ | '_ \/ __| | '_ \| |/ _ \ | |_) | |/ _` | | | | '_ \ / _ \ / _ \| |/ / #
#  / ___ \| | | \__ \ | |_) | |  __/ |  __/| | (_| | |_| | |_) | (_) | (_) |   <  #
# /_/   \_\_| |_|___/_|_.__/|_|\___| |_|   |_|\__,_|\__, |_.__/ \___/ \___/|_|\_\ #
#                                                   |___/                         #
###################################################################################

# FILENAME
# provision_pan_f5_aws.yml
#
# DESCRIPTION
# Example playbook that will instantiate Palo Alto VM-Series firewall and F5 Networks BigIP in AWS account and configure it basic
#
# REQUIREMENTS
# pip install boto3
# pip install botocore
# pip install ansible
# ansible-galaxy install PaloAltoNetworks.paloaltonetworks
#
# STEPS
# update vars.yml with your own credentials/settings
#
# Good practice: The var files are provided in cleartext. They should be edited and encrypred using:
# ansible-vault encrypt firewall-secrets.yml
#
# EXECUTE
# ansible-playbook provision_pan_f5_aws.yml
---
- hosts: localhost
  connection: local
  gather_facts: False

###################################################################################
#                               _____         _                                   #
#                              |_   _|_ _ ___| | _____                            #
#                                | |/ _` / __| |/ / __|                           #
#                                | | (_| \__ \   <\__ \                           #
#                                |_|\__,_|___/_|\_\___/                           #
#                                                                                 #
###################################################################################

  tasks:
    - name: include variables (free-form)
      include_vars: vars.yml
      no_log: 'yes'

    - name: Provision AWS-Create-Stack-Base.json
      cloudformation:
        stack_name: "StackBase"
        state: present
        region: "{{ region }}"
        disable_rollback: true
        template: AWS-Create-Stack-Base.json
      args:
        tags:
          Stack: StackBase
      register: cloudformation
